FLUSH SOME USEFUL PROCEDURES

FLUSH --
NEWHDR IMMEDIATE
PROC ASM
BEGIN
    DICT LOAD
    8 ADD
    COPY BLOAD
    128 OR
    SWAP BSTORE
    RETURN
END

FLUSH --
FLUSH ASSEMBLES THE FOLLOWING WORD REGARDLESS OF IMMEDIACY
NEWHDR '
PROC ASM
BEGIN
    PRS_NXT DROP
    PRS_WRD FIND DE_NAME ADD CALIGN ASM
    RETURN
END IMMEDIATE


FLUSH --
FLUSH NICER COMMENT SYNTAX
NEWHDR #
PROC ASM
BEGIN
    ' FLUSH
    RETURN
END IMMEDIATE

# Now we have comments syntax, so lets define function syntax

# --
NEWHDR FN:
PROC ASM
BEGIN
    NEWHDR
    PROC ASM
    BEGIN
    RETURN
END

# --
FN: END-FN
    LIT RETURN ASM
    ' END
    RETURN
END IMMEDIATE

# Now loops

# -- target
FN: DO
    HERE LOAD
END-FN IMMEDIATE

# target --
FN: LOOP
    LIT BRANCH ASM
    HERE LOAD 8 ADD SUB ASM
END-FN IMMEDIATE

# Some output helpers

# --
FN: DEFSTR:
    NEWHDR
    STR ASM
END-FN

DEFSTR: NL
1 BASM
10 BASM
0 BASM

# str len --
FN: PRINTLN
    PRINT NL PRINT
END-FN

# And a dictionary walk

# ptr --
FN: WALK
    DO
        COPY DE_NAME PRINTLN
        LOAD COPY
    LOOP

    DROP
END-FN

FN: CONST:
    NEWHDR
    CONST ASM
    ASM
END-FN

34 CONST: QUOTES

# start end -- start len
FN: STRING-FROM-RANGE
    OVER SUB
END-FN

# Exceedingly hacky because I haven't implemented conditionals yet; will happily read past the end if the terminating
# quote is not available
# -- string length
FN: S"
    IN_PTR LOAD
    DO
        1 ADD
        COPY BLOAD QUOTES EQ NOT
    LOOP
    IN_PTR LOAD 1 ADD SWAP
    COPY 1 ADD IN_ADV DROP DROP
    STRING-FROM-RANGE
END-FN

# string length --
FN: STRING:
    NEWHDR
    STR ASM
    COPY BASM

    HERE LOAD OVER OVER ADD PUSH
    SCOPY

    POP HERE STORE
    0 BASM
END-FN

S" Mini (C) 2023 David Detweiler" STRING: BANNER
S" Enter `KERNEL WALK` to see the list of instructions defined by the kernel" STRING: HINT
BANNER PRINTLN
HINT PRINTLN
NL PRINT

# The magical part where we yield control back to the terminal
STDIN LOAD IN STORE
